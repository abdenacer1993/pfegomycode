{"ast":null,"code":"import { ADD_COURSES_FAIL, ADD_COURSES_SUCCESS, GET_ALL_COURSES_FAIL, GET_ALL_COURSES_SUCCESS, GET_ONE_COURSES_FAIL, GET_ONE_COURSES_SUCCESS, LOADING_COURSES, UPDATE_COURSES_FAIL, UPDATE_COURSES_SUCCESS, DELETE_COURSES_SUCCESS, DELETE_COURSES_FAIL } from \"../constants/coursesConstant\";\nimport axios from \"axios\";\nexport const getALLCourses = () => async dispatch => {\n  dispatch({\n    type: LOADING_COURSES\n  });\n\n  try {\n    const response = await axios.get(\"http://localhost:5000/courses/allCourses\", {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    });\n    dispatch({\n      type: GET_ALL_COURSES_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ALL_COURSES_FAIL,\n      payload: error\n    });\n  }\n};\nexport const addCourses = (newCourses, navigate) => async dispatch => {\n  try {\n    const response = await axios.post(\"http://localhost:5000/Courses/AddCourses\", newCourses, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    });\n    console.log(response);\n    dispatch({\n      type: ADD_COURSES_SUCCESS\n    }); //dispatch(getALLCourses())\n\n    navigate(\"/\");\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: ADD_COURSES_FAIL,\n      payload: error\n    });\n  }\n};\nexport const deleteCourses = id => async dispatch => {\n  try {\n    const response = await axios.delete(`http://localhost:5000/Courses/${id}`);\n    dispatch({\n      type: DELETE_COURSES_SUCCESS\n    });\n    dispatch(getALLCourses());\n  } catch (error) {\n    dispatch({\n      type: DELETE_COURSES_FAIL,\n      payload: error\n    });\n  }\n};\nexport const getOneCourses = id => async dispatch => {\n  try {\n    const response = await axios.get(`http://localhost:5000/Courses/${id}`);\n    dispatch({\n      type: GET_ONE_COURSES_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ONE_COURSES_FAIL,\n      payload: error\n    });\n  }\n};\nexport const updateOneCOURSES = (id, newOne, navigate) => async dispatch => {\n  try {\n    const response = await axios.put(`http://localhost:5000/Courses/${id}`, newOne);\n    dispatch({\n      type: UPDATE_COURSES_SUCCESS\n    });\n    dispatch(getALLCourses());\n    navigate(\"/\");\n  } catch (error) {\n    dispatch({\n      type: UPDATE_COURSES_FAIL,\n      payload: error\n    });\n  }\n};","map":{"version":3,"names":["ADD_COURSES_FAIL","ADD_COURSES_SUCCESS","GET_ALL_COURSES_FAIL","GET_ALL_COURSES_SUCCESS","GET_ONE_COURSES_FAIL","GET_ONE_COURSES_SUCCESS","LOADING_COURSES","UPDATE_COURSES_FAIL","UPDATE_COURSES_SUCCESS","DELETE_COURSES_SUCCESS","DELETE_COURSES_FAIL","axios","getALLCourses","dispatch","type","response","get","headers","Authorization","localStorage","getItem","payload","data","error","addCourses","newCourses","navigate","post","console","log","deleteCourses","id","delete","getOneCourses","updateOneCOURSES","newOne","put"],"sources":["E:/Nouveau dossier (2)/GoMyCode/projet/frontend/src/JS/actions/coursesActions.js"],"sourcesContent":["import {\n    ADD_COURSES_FAIL,\n    ADD_COURSES_SUCCESS,\n    GET_ALL_COURSES_FAIL,\n    GET_ALL_COURSES_SUCCESS,\n    GET_ONE_COURSES_FAIL,\n    GET_ONE_COURSES_SUCCESS,\n    LOADING_COURSES,\n    UPDATE_COURSES_FAIL,\n    UPDATE_COURSES_SUCCESS,\n    DELETE_COURSES_SUCCESS,\n    DELETE_COURSES_FAIL\n  } from \"../constants/coursesConstant\";\n  import axios from \"axios\";\n  \n  export const getALLCourses = () => async (dispatch) => {\n    \n    dispatch({ type: LOADING_COURSES });\n    try {\n      const response = await axios.get(\n        \"http://localhost:5000/courses/allCourses\",\n      {headers:{Authorization:`Bearer ${localStorage.getItem(\"token\")}`}}\n      )\n      dispatch({\n        type: GET_ALL_COURSES_SUCCESS,\n        payload: response.data\n        \n      });\n    } catch (error) {\n      dispatch({ type: GET_ALL_COURSES_FAIL, payload: error });\n    }\n  };\n  \n  export const addCourses = (newCourses,navigate) => async (dispatch) => {\n      try {\n      const response = await axios.post(\n        \"http://localhost:5000/Courses/AddCourses\",\n        newCourses,\n        {headers:{Authorization:`Bearer ${localStorage.getItem(\"token\")}`}}\n      );\n      console.log(response)\n      dispatch({ type: ADD_COURSES_SUCCESS });\n      //dispatch(getALLCourses())\n      navigate(\"/\")\n    } catch (error) {\n      console.log(error);\n      \n      dispatch({ type: ADD_COURSES_FAIL,payload:error });\n    }\n  };\n  \n  export const deleteCourses = (id) => async (dispatch) => {\n      try {\n        const response = await axios.delete(`http://localhost:5000/Courses/${id}`);\n        dispatch({\n          type: DELETE_COURSES_SUCCESS,\n        });  \n        dispatch(getALLCourses())\n      } catch (error) {\n        dispatch({ type: DELETE_COURSES_FAIL, payload: error });\n      }\n    };\n  \n    \n  export const getOneCourses = (id) => async (dispatch) => {\n    try {\n      const response = await axios.get(`http://localhost:5000/Courses/${id}`);\n      dispatch({\n        type: GET_ONE_COURSES_SUCCESS,\n        payload: response.data\n      }); \n    } catch (error) {\n      dispatch({ type: GET_ONE_COURSES_FAIL, payload: error });\n    }\n  };\n  export const updateOneCOURSES = (id, newOne, navigate) => async (dispatch) => {\n    try {\n      const response = await axios.put(`http://localhost:5000/Courses/${id}`, newOne);\n      dispatch({\n        type: UPDATE_COURSES_SUCCESS,\n      });      \n      dispatch(getALLCourses())\n      navigate(\"/\")\n    } catch (error) {\n      dispatch({ type: UPDATE_COURSES_FAIL, payload: error });\n    }\n  };"],"mappings":"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"},"metadata":{},"sourceType":"module"}